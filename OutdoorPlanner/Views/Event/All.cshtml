@using OutdoorPlanner.Models.Enum
@model PaginatedList<OutdoorPlanner.ViewModels.EventViewModel>

@if (TempData["FilterByCategory"] != null)
{
    <h1>@TempData["FilterByCategory"]</h1>
} else
{
    <h2>Upcoming Events</h2>
}

@using (Html.BeginForm("All", "Event"))
{
    <div class="d-flex align-items-end justify-content-between">
        <div class="d-flex">
            <label for="filterByCategory"></label>
            <div class="me-2">
                <select class="form-select" id="filterByCategory" name="filterByCategory" aria-label="Filter By">
                    <option value="" disabled selected hidden>Filter By All </option>
                    @foreach (var cat in Enum.GetNames(typeof(Category)))
                    {
                        <option>@cat</option>
                    }
                </select>
            </div>

            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
        <p class="mb-1">
            <a asp-action="CreateEvent" class="btn btn-success">Create New Event</a>
            <a asp-action="PastEvents" class="btn btn-secondary">Past Events</a>
        </p>
    </div>
}
<br />

<div>
    @if (TempData["SuccessMessage"] != null)
    {
        <p class="text-success">@TempData["SuccessMessage"]</p>
    }
    else if (TempData["ErrorMessage"] != null)
    {
        <p class="text-danger">@TempData["ErrorMessage"]</p>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th> Event Name </th>
            <th> Date & Time </th>
            <th> Weather Forecast </th>
            <th> City </th>
            <th> Category </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@if (Model is not null)
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            <td>
                @item.Date.ToString("dd/MM/yyyy hh:mm tt") 
            </td>
            <td>
                @if (item.Forcasted is false) {
                    <p>Not forcasted</p>
                } else if (item.Rain) {
                    <p>🌧️ @item.Temperature°C </p>
                } else if (item.CloudsValue < 30) {
                    <p>☀️ @item.Temperature°C</p>
                } else if (item.CloudsValue < 75) {
                    <p>⛅ @item.Temperature°C</p>
                } else {
                    <p>☁️ @item.Temperature°C</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                <a asp-controller="NewsFeed" asp-action="ShowEventPosts" asp-route-eventId="@item.Id" class="btn btn-success btn-sm">News Feed</a> |
                <a asp-controller="Invitations" asp-action="ShowEventInvitations" asp-route-eventId="@item.Id" class="btn btn-success btn-sm">Event Guestlist</a> |
                <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-info btn-sm">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="All"
   asp-route-pageNumber="@(Model.PageIndex - 1)" ,
   class="btn btn-default @prevDisabled">
    Previous Page
</a>
<a asp-action="All"
   asp-route-pageNumber="@(Model.PageIndex + 1)" ,
   class="btn btn-default @nextDisabled">
    Next Page
</a>